#!/usr/bin/env ruby


THEME_NAME = 'signal'


## 32x32
apps_32x32 = {
  'keepassx' => [
    'keepassxc',
    'keepassxc-dark',
    'keepassxc-locked',
    'keepassxc-unlocked',
  ],
}


## GROUP BY SIZE
size_32x32 = {
  'apps' => apps_32x32,
}


## THEME
theme = {
  '32x32' => size_32x32,
}


def check_dir(dir)
  unless File.directory?(dir)
    Dir.mkdir(dir)
  end
end


def run(theme)
  theme_root = File.expand_path("../#{THEME_NAME}")
  errors = []

  check_dir(theme_root)

  theme.each do |size, size_in|
    dir_out = File.join(theme_root, size)
    check_dir(dir_out)

    ext = size[/^scalable/] ? ".svg" : ".png"

    size_in.each do |cat, cat_in|
      dir_out =File.join(theme_root, size, cat)
      check_dir(dir_out)
      Dir.chdir(dir_out)

      puts cat

      cat_in.each do |name, links|
        name = "#{name}#{ext}"

        unless File.exist?(name)
          error_string = "!!! ERROR - File not found ---> \"#{name}\""
          #error_string = "!!! ERROR - File not found ---> \"#{name}\""
          puts error_string
          errors << error_string
          next
        end

        links.each do |link|
          link = "#{link}#{ext}"

          puts_string = "\"#{name}\" <--- \"#{link}\""

          if File.symlink?(link)
            puts "SKIPPED - " + puts_string
            next
          end

          unless File.symlink(name, link)
            error_string = "!!! ERROR - Unable to create link ---> " + puts_string
            puts error_string
            errors << error_string
            next
          end

          puts "OK - " + puts_string
        end

        puts
      end
    end
  end

  puts "\nERRORS - #{errors.size}\n" if errors.size > 0
end


run(theme)

